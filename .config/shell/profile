#!/bin/zsh
# NOTE: The content of this file must be compatible with any /bin/sh

# Add to the $PATH. Lower ones have higher priority.
export PATH="/bin:$PATH";
export PATH="/sbin:$PATH";
export PATH="/usr/bin:$PATH";
export PATH="/usr/local/bin:$PATH";
export PATH="/usr/local/sbin:$PATH";
export PATH="/usr/sbin:$PATH";
export PATH="$HOME/.local/bin:$PATH";
export PATH="$HOME/.cargo/bin:$PATH"
export PATH="$PATH:/usr/local/go/bin"

# Default programs
export TERMINAL="alacritty"
export BROWSER="mullvad-browser"
export EDITOR="nvim"
export PAGER="less"

# You may need to manually set your language environment.
export LANG=en_US.UTF-8

# ~/ Clean-up:
export XDG_CONFIG_HOME="$HOME/.config"
export XDG_DATA_HOME="$HOME/.local/share"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_OPT_HOME="$HOME/.opt"
# Since Ubuntu comes with a display manager, which runs `startx` the path between
# regular login and login through tty differs if the xinitrc is not in the $HOME
# directory.
export XINITRC="$HOME/.xinitrc"
# ---
export HISTFILE="$XDG_DATA_HOME/history"
export PYENV_ROOT="$XDG_OPT_HOME/pyenv"
export PYTHONSTARTUP="$XDG_CONFIG_HOME/python/pythonrc"
export VIMINIT="source $HOME/.config/nvim/init.vim"
export RIPGREP_CONFIG_PATH="$XDG_CONFIG_HOME/ripgrep/rc"
export RUSTUP_HOME="$XDG_DATA_HOME/rustup"
export ZDOTDIR="$XDG_CONFIG_HOME/zsh"
# ---
export DOCKER_CONFIG="$XDG_CONFIG_HOME/docker"
export FZF_DEFAULT_COMMAND="fd --type file"
export FZF_DEFAULT_OPTS="--layout=reverse --height 40%"
export GNUPGHOME="$XDG_DATA_HOME/gnupg"
export IPYTHONDIR="$XDG_CONFIG_HOME/ipython"
export JUPYTER_CONFIG_DIR="$XDG_CONFIG_HOME/jupyter"
export LESSHISTFILE="$XDG_CACHE_HOME/less/history"
export MPLCONFIGDIR="$XDG_CONFIG_HOME/matplotlib"
export NPM_CONFIG_USERCONFIG="$XDG_CONFIG_HOME/npm/npmrc"
export PSQLRC="$XDG_CONFIG_HOME/pg/psqlrc"
export PSQL_HISTORY="$XDG_CACHE_HOME/pg/psql_history"
export GOPATH="$XDG_CACHE_HOME/go"
export GOBIN="$GOPATH/bin"
export PATH="$PATH:$GOBIN"
# ---
# Desktop applications
# ---
export SKIP_TANDEM_OVERLAY=TRUE
export POETRY_VIRTUALENVS_IN_PROJECT="true"

# TODO: refactor these lines
export NVM_DIR="$XDG_CONFIG_HOME/nvm"
[ -s "$NVM_DIR/nvm.sh" ] && source "$NVM_DIR/nvm.sh"  # This loads nvm

# Start an Xorg display server using the `xstart` frontend if it is not
# already running and user is on tty1. Require to be on tty1 so that
# these dotfiles can be used on servers as well (e.g. when connecting
# over ssh you don't want to start an X server).
[ "$(tty)" = "/dev/tty1" ] && ! pidof -s Xorg >/dev/null 2>&1 && exec startx "$XINITRC"
